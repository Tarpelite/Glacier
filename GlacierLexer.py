# Generated from Glacier.g4 by ANTLR 4.8
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2>")
        buf.write("\u017b\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\4\3\4")
        buf.write("\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3")
        buf.write("\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3")
        buf.write("\f\3\r\3\r\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3\21\3\21")
        buf.write("\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24")
        buf.write("\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26")
        buf.write("\3\26\3\27\3\27\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\32")
        buf.write("\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34")
        buf.write("\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35")
        buf.write("\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3 \3 \3 \3 \3")
        buf.write(" \3!\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3")
        buf.write("&\3&\3&\3\'\3\'\3(\3(\3(\3)\3)\3)\3*\3*\3+\3+\3+\3+\3")
        buf.write(",\3,\3,\3,\3,\3-\3-\3-\3-\3-\3-\3-\3.\3.\3.\3.\3.\3/\3")
        buf.write("/\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3")
        buf.write("\61\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\63\3\63")
        buf.write("\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\64\3\64\3\65\3\65")
        buf.write("\3\65\3\65\3\65\3\66\3\66\3\66\3\66\3\66\3\67\3\67\3\67")
        buf.write("\3\67\3\67\3\67\38\68\u0153\n8\r8\168\u0154\38\38\39\3")
        buf.write("9\39\39\79\u015d\n9\f9\169\u0160\139\39\39\39\39\3:\3")
        buf.write(":\3:\7:\u0169\n:\f:\16:\u016c\13:\3;\6;\u016f\n;\r;\16")
        buf.write(";\u0170\3<\6<\u0174\n<\r<\16<\u0175\3=\3=\3=\3=\3\u015e")
        buf.write("\2>\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r")
        buf.write("\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30")
        buf.write("/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'")
        buf.write("M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q")
        buf.write(":s;u<w=y>\3\2\4\5\2\13\f\17\17\"\"\5\2C\\aac|\2\u0180")
        buf.write("\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13")
        buf.write("\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3")
        buf.write("\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2")
        buf.write("\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2")
        buf.write("%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2")
        buf.write("\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67")
        buf.write("\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2")
        buf.write("A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2")
        buf.write("\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2")
        buf.write("\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2")
        buf.write("\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3")
        buf.write("\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q")
        buf.write("\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\3")
        buf.write("{\3\2\2\2\5\177\3\2\2\2\7\u0082\3\2\2\2\t\u0085\3\2\2")
        buf.write("\2\13\u0087\3\2\2\2\r\u0089\3\2\2\2\17\u008b\3\2\2\2\21")
        buf.write("\u008d\3\2\2\2\23\u008f\3\2\2\2\25\u0094\3\2\2\2\27\u009a")
        buf.write("\3\2\2\2\31\u009e\3\2\2\2\33\u00a0\3\2\2\2\35\u00a2\3")
        buf.write("\2\2\2\37\u00a5\3\2\2\2!\u00a7\3\2\2\2#\u00a9\3\2\2\2")
        buf.write("%\u00ac\3\2\2\2\'\u00b1\3\2\2\2)\u00b6\3\2\2\2+\u00bb")
        buf.write("\3\2\2\2-\u00c0\3\2\2\2/\u00c4\3\2\2\2\61\u00c6\3\2\2")
        buf.write("\2\63\u00c9\3\2\2\2\65\u00cb\3\2\2\2\67\u00ce\3\2\2\2")
        buf.write("9\u00d6\3\2\2\2;\u00e0\3\2\2\2=\u00e6\3\2\2\2?\u00e8\3")
        buf.write("\2\2\2A\u00ed\3\2\2\2C\u00f5\3\2\2\2E\u00f7\3\2\2\2G\u00f9")
        buf.write("\3\2\2\2I\u00fb\3\2\2\2K\u00fd\3\2\2\2M\u0100\3\2\2\2")
        buf.write("O\u0102\3\2\2\2Q\u0105\3\2\2\2S\u0108\3\2\2\2U\u010a\3")
        buf.write("\2\2\2W\u010e\3\2\2\2Y\u0113\3\2\2\2[\u011a\3\2\2\2]\u011f")
        buf.write("\3\2\2\2_\u0126\3\2\2\2a\u012d\3\2\2\2c\u0132\3\2\2\2")
        buf.write("e\u0136\3\2\2\2g\u013b\3\2\2\2i\u0141\3\2\2\2k\u0146\3")
        buf.write("\2\2\2m\u014b\3\2\2\2o\u0152\3\2\2\2q\u0158\3\2\2\2s\u0165")
        buf.write("\3\2\2\2u\u016e\3\2\2\2w\u0173\3\2\2\2y\u0177\3\2\2\2")
        buf.write("{|\7f\2\2|}\7g\2\2}~\7h\2\2~\4\3\2\2\2\177\u0080\7<\2")
        buf.write("\2\u0080\u0081\7<\2\2\u0081\6\3\2\2\2\u0082\u0083\7?\2")
        buf.write("\2\u0083\u0084\7@\2\2\u0084\b\3\2\2\2\u0085\u0086\7}\2")
        buf.write("\2\u0086\n\3\2\2\2\u0087\u0088\7\177\2\2\u0088\f\3\2\2")
        buf.write("\2\u0089\u008a\7*\2\2\u008a\16\3\2\2\2\u008b\u008c\7.")
        buf.write("\2\2\u008c\20\3\2\2\2\u008d\u008e\7+\2\2\u008e\22\3\2")
        buf.write("\2\2\u008f\u0090\7V\2\2\u0090\u0091\7t\2\2\u0091\u0092")
        buf.write("\7w\2\2\u0092\u0093\7g\2\2\u0093\24\3\2\2\2\u0094\u0095")
        buf.write("\7H\2\2\u0095\u0096\7c\2\2\u0096\u0097\7n\2\2\u0097\u0098")
        buf.write("\7u\2\2\u0098\u0099\7g\2\2\u0099\26\3\2\2\2\u009a\u009b")
        buf.write("\7n\2\2\u009b\u009c\7g\2\2\u009c\u009d\7v\2\2\u009d\30")
        buf.write("\3\2\2\2\u009e\u009f\7<\2\2\u009f\32\3\2\2\2\u00a0\u00a1")
        buf.write("\7?\2\2\u00a1\34\3\2\2\2\u00a2\u00a3\7k\2\2\u00a3\u00a4")
        buf.write("\7p\2\2\u00a4\36\3\2\2\2\u00a5\u00a6\7]\2\2\u00a6 \3\2")
        buf.write("\2\2\u00a7\u00a8\7_\2\2\u00a8\"\3\2\2\2\u00a9\u00aa\7")
        buf.write("k\2\2\u00aa\u00ab\7h\2\2\u00ab$\3\2\2\2\u00ac\u00ad\7")
        buf.write("v\2\2\u00ad\u00ae\7j\2\2\u00ae\u00af\7g\2\2\u00af\u00b0")
        buf.write("\7p\2\2\u00b0&\3\2\2\2\u00b1\u00b2\7g\2\2\u00b2\u00b3")
        buf.write("\7n\2\2\u00b3\u00b4\7u\2\2\u00b4\u00b5\7g\2\2\u00b5(\3")
        buf.write("\2\2\2\u00b6\u00b7\7\\\2\2\u00b7\u00b8\7g\2\2\u00b8\u00b9")
        buf.write("\7t\2\2\u00b9\u00ba\7q\2\2\u00ba*\3\2\2\2\u00bb\u00bc")
        buf.write("\7I\2\2\u00bc\u00bd\7t\2\2\u00bd\u00be\7c\2\2\u00be\u00bf")
        buf.write("\7f\2\2\u00bf,\3\2\2\2\u00c0\u00c1\7T\2\2\u00c1\u00c2")
        buf.write("\7g\2\2\u00c2\u00c3\7h\2\2\u00c3.\3\2\2\2\u00c4\u00c5")
        buf.write("\7#\2\2\u00c5\60\3\2\2\2\u00c6\u00c7\7<\2\2\u00c7\u00c8")
        buf.write("\7?\2\2\u00c8\62\3\2\2\2\u00c9\u00ca\7^\2\2\u00ca\64\3")
        buf.write("\2\2\2\u00cb\u00cc\7/\2\2\u00cc\u00cd\7@\2\2\u00cd\66")
        buf.write("\3\2\2\2\u00ce\u00cf\7w\2\2\u00cf\u00d0\7p\2\2\u00d0\u00d1")
        buf.write("\7h\2\2\u00d1\u00d2\7q\2\2\u00d2\u00d3\7n\2\2\u00d3\u00d4")
        buf.write("\7f\2\2\u00d4\u00d5\7t\2\2\u00d58\3\2\2\2\u00d6\u00d7")
        buf.write("\7t\2\2\u00d7\u00d8\7g\2\2\u00d8\u00d9\7r\2\2\u00d9\u00da")
        buf.write("\7n\2\2\u00da\u00db\7k\2\2\u00db\u00dc\7e\2\2\u00dc\u00dd")
        buf.write("\7c\2\2\u00dd\u00de\7v\2\2\u00de\u00df\7g\2\2\u00df:\3")
        buf.write("\2\2\2\u00e0\u00e1\7h\2\2\u00e1\u00e2\7q\2\2\u00e2\u00e3")
        buf.write("\7n\2\2\u00e3\u00e4\7f\2\2\u00e4\u00e5\7n\2\2\u00e5<\3")
        buf.write("\2\2\2\u00e6\u00e7\7B\2\2\u00e7>\3\2\2\2\u00e8\u00e9\7")
        buf.write("t\2\2\u00e9\u00ea\7g\2\2\u00ea\u00eb\7n\2\2\u00eb\u00ec")
        buf.write("\7w\2\2\u00ec@\3\2\2\2\u00ed\u00ee\7u\2\2\u00ee\u00ef")
        buf.write("\7q\2\2\u00ef\u00f0\7h\2\2\u00f0\u00f1\7v\2\2\u00f1\u00f2")
        buf.write("\7o\2\2\u00f2\u00f3\7c\2\2\u00f3\u00f4\7z\2\2\u00f4B\3")
        buf.write("\2\2\2\u00f5\u00f6\7-\2\2\u00f6D\3\2\2\2\u00f7\u00f8\7")
        buf.write("/\2\2\u00f8F\3\2\2\2\u00f9\u00fa\7,\2\2\u00faH\3\2\2\2")
        buf.write("\u00fb\u00fc\7\61\2\2\u00fcJ\3\2\2\2\u00fd\u00fe\7#\2")
        buf.write("\2\u00fe\u00ff\7?\2\2\u00ffL\3\2\2\2\u0100\u0101\7>\2")
        buf.write("\2\u0101N\3\2\2\2\u0102\u0103\7>\2\2\u0103\u0104\7?\2")
        buf.write("\2\u0104P\3\2\2\2\u0105\u0106\7@\2\2\u0106\u0107\7?\2")
        buf.write("\2\u0107R\3\2\2\2\u0108\u0109\7@\2\2\u0109T\3\2\2\2\u010a")
        buf.write("\u010b\7o\2\2\u010b\u010c\7c\2\2\u010c\u010d\7r\2\2\u010d")
        buf.write("V\3\2\2\2\u010e\u010f\7h\2\2\u010f\u0110\7q\2\2\u0110")
        buf.write("\u0111\7n\2\2\u0111\u0112\7f\2\2\u0112X\3\2\2\2\u0113")
        buf.write("\u0114\7w\2\2\u0114\u0115\7p\2\2\u0115\u0116\7h\2\2\u0116")
        buf.write("\u0117\7q\2\2\u0117\u0118\7n\2\2\u0118\u0119\7f\2\2\u0119")
        buf.write("Z\3\2\2\2\u011a\u011b\7v\2\2\u011b\u011c\7c\2\2\u011c")
        buf.write("\u011d\7k\2\2\u011d\u011e\7n\2\2\u011e\\\3\2\2\2\u011f")
        buf.write("\u0120\7h\2\2\u0120\u0121\7k\2\2\u0121\u0122\7n\2\2\u0122")
        buf.write("\u0123\7v\2\2\u0123\u0124\7g\2\2\u0124\u0125\7t\2\2\u0125")
        buf.write("^\3\2\2\2\u0126\u0127\7V\2\2\u0127\u0128\7g\2\2\u0128")
        buf.write("\u0129\7p\2\2\u0129\u012a\7u\2\2\u012a\u012b\7q\2\2\u012b")
        buf.write("\u012c\7t\2\2\u012c`\3\2\2\2\u012d\u012e\7N\2\2\u012e")
        buf.write("\u012f\7k\2\2\u012f\u0130\7u\2\2\u0130\u0131\7v\2\2\u0131")
        buf.write("b\3\2\2\2\u0132\u0133\7K\2\2\u0133\u0134\7p\2\2\u0134")
        buf.write("\u0135\7v\2\2\u0135d\3\2\2\2\u0136\u0137\7W\2\2\u0137")
        buf.write("\u0138\7K\2\2\u0138\u0139\7p\2\2\u0139\u013a\7v\2\2\u013a")
        buf.write("f\3\2\2\2\u013b\u013c\7H\2\2\u013c\u013d\7n\2\2\u013d")
        buf.write("\u013e\7q\2\2\u013e\u013f\7c\2\2\u013f\u0140\7v\2\2\u0140")
        buf.write("h\3\2\2\2\u0141\u0142\7D\2\2\u0142\u0143\7q\2\2\u0143")
        buf.write("\u0144\7q\2\2\u0144\u0145\7n\2\2\u0145j\3\2\2\2\u0146")
        buf.write("\u0147\7H\2\2\u0147\u0148\7w\2\2\u0148\u0149\7p\2\2\u0149")
        buf.write("\u014a\7e\2\2\u014al\3\2\2\2\u014b\u014c\7U\2\2\u014c")
        buf.write("\u014d\7j\2\2\u014d\u014e\7c\2\2\u014e\u014f\7r\2\2\u014f")
        buf.write("\u0150\7g\2\2\u0150n\3\2\2\2\u0151\u0153\t\2\2\2\u0152")
        buf.write("\u0151\3\2\2\2\u0153\u0154\3\2\2\2\u0154\u0152\3\2\2\2")
        buf.write("\u0154\u0155\3\2\2\2\u0155\u0156\3\2\2\2\u0156\u0157\b")
        buf.write("8\2\2\u0157p\3\2\2\2\u0158\u0159\7\61\2\2\u0159\u015a")
        buf.write("\7\61\2\2\u015a\u015e\3\2\2\2\u015b\u015d\13\2\2\2\u015c")
        buf.write("\u015b\3\2\2\2\u015d\u0160\3\2\2\2\u015e\u015f\3\2\2\2")
        buf.write("\u015e\u015c\3\2\2\2\u015f\u0161\3\2\2\2\u0160\u015e\3")
        buf.write("\2\2\2\u0161\u0162\7\f\2\2\u0162\u0163\3\2\2\2\u0163\u0164")
        buf.write("\b9\2\2\u0164r\3\2\2\2\u0165\u016a\t\3\2\2\u0166\u0169")
        buf.write("\t\3\2\2\u0167\u0169\5u;\2\u0168\u0166\3\2\2\2\u0168\u0167")
        buf.write("\3\2\2\2\u0169\u016c\3\2\2\2\u016a\u0168\3\2\2\2\u016a")
        buf.write("\u016b\3\2\2\2\u016bt\3\2\2\2\u016c\u016a\3\2\2\2\u016d")
        buf.write("\u016f\4\62;\2\u016e\u016d\3\2\2\2\u016f\u0170\3\2\2\2")
        buf.write("\u0170\u016e\3\2\2\2\u0170\u0171\3\2\2\2\u0171v\3\2\2")
        buf.write("\2\u0172\u0174\7\"\2\2\u0173\u0172\3\2\2\2\u0174\u0175")
        buf.write("\3\2\2\2\u0175\u0173\3\2\2\2\u0175\u0176\3\2\2\2\u0176")
        buf.write("x\3\2\2\2\u0177\u0178\5u;\2\u0178\u0179\7\60\2\2\u0179")
        buf.write("\u017a\5u;\2\u017az\3\2\2\2\t\2\u0154\u015e\u0168\u016a")
        buf.write("\u0170\u0175\3\b\2\2")
        return buf.getvalue()


class GlacierLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    T__52 = 53
    T__53 = 54
    WS = 55
    COMMENT = 56
    VAR = 57
    INT = 58
    SPACESL = 59
    FLOAT = 60

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'def'", "'::'", "'=>'", "'{'", "'}'", "'('", "','", "')'", 
            "'True'", "'False'", "'let'", "':'", "'='", "'in'", "'['", "']'", 
            "'if'", "'then'", "'else'", "'Zero'", "'Grad'", "'Ref'", "'!'", 
            "':='", "'\\'", "'->'", "'unfoldr'", "'replicate'", "'foldl'", 
            "'@'", "'relu'", "'softmax'", "'+'", "'-'", "'*'", "'/'", "'!='", 
            "'<'", "'<='", "'>='", "'>'", "'map'", "'fold'", "'unfold'", 
            "'tail'", "'filter'", "'Tensor'", "'List'", "'Int'", "'UInt'", 
            "'Float'", "'Bool'", "'Func'", "'Shape'" ]

    symbolicNames = [ "<INVALID>",
            "WS", "COMMENT", "VAR", "INT", "SPACESL", "FLOAT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "T__51", "T__52", "T__53", "WS", "COMMENT", "VAR", 
                  "INT", "SPACESL", "FLOAT" ]

    grammarFileName = "Glacier.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.8")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


