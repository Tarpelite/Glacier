# Generated from Glacier.g4 by ANTLR 4.8
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2=")
        buf.write("\u0179\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\4\3\4\3\4\3")
        buf.write("\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\n")
        buf.write("\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\17\3\17\3\20")
        buf.write("\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22")
        buf.write("\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24")
        buf.write("\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\30\3\30")
        buf.write("\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32")
        buf.write("\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33")
        buf.write("\3\33\3\33\3\33\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\36")
        buf.write("\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3 \3 \3")
        buf.write("!\3!\3\"\3\"\3#\3#\3#\3$\3$\3%\3%\3%\3&\3&\3&\3\'\3\'")
        buf.write("\3(\3(\3(\3(\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3*\3*\3+\3")
        buf.write("+\3+\3+\3+\3,\3,\3,\3,\3,\3,\3,\3-\3-\3.\3.\3.\3.\3.\3")
        buf.write(".\3.\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\61\3\61\3\61")
        buf.write("\3\61\3\61\3\62\3\62\3\62\3\62\3\62\3\62\3\63\3\63\3\63")
        buf.write("\3\63\3\63\3\64\3\64\3\64\3\64\3\64\3\65\3\65\3\65\3\65")
        buf.write("\3\65\3\65\3\66\6\66\u0146\n\66\r\66\16\66\u0147\3\66")
        buf.write("\3\66\3\67\3\67\3\67\3\67\7\67\u0150\n\67\f\67\16\67\u0153")
        buf.write("\13\67\3\67\3\67\3\67\3\67\38\38\38\78\u015c\n8\f8\16")
        buf.write("8\u015f\138\39\69\u0162\n9\r9\169\u0163\3:\6:\u0167\n")
        buf.write(":\r:\16:\u0168\3;\3;\3;\3;\3<\3<\3<\3<\3<\3<\3<\3<\3<")
        buf.write("\5<\u0178\n<\3\u0151\2=\3\3\5\4\7\5\t\6\13\7\r\b\17\t")
        buf.write("\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23")
        buf.write("%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36")
        buf.write(";\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63")
        buf.write("e\64g\65i\66k\67m8o9q:s;u<w=\3\2\4\5\2\13\f\17\17\"\"")
        buf.write("\5\2C\\aac|\2\u017f\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2")
        buf.write("\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2")
        buf.write("\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31")
        buf.write("\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2")
        buf.write("\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3")
        buf.write("\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2")
        buf.write("\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3")
        buf.write("\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G")
        buf.write("\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2")
        buf.write("Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2")
        buf.write("\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2")
        buf.write("\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2")
        buf.write("\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3")
        buf.write("\2\2\2\3y\3\2\2\2\5}\3\2\2\2\7\u0080\3\2\2\2\t\u0083\3")
        buf.write("\2\2\2\13\u0085\3\2\2\2\r\u0087\3\2\2\2\17\u0089\3\2\2")
        buf.write("\2\21\u008b\3\2\2\2\23\u008d\3\2\2\2\25\u0091\3\2\2\2")
        buf.write("\27\u0093\3\2\2\2\31\u0095\3\2\2\2\33\u0098\3\2\2\2\35")
        buf.write("\u009a\3\2\2\2\37\u009c\3\2\2\2!\u009f\3\2\2\2#\u00a4")
        buf.write("\3\2\2\2%\u00a9\3\2\2\2\'\u00ae\3\2\2\2)\u00b3\3\2\2\2")
        buf.write("+\u00b7\3\2\2\2-\u00ba\3\2\2\2/\u00bc\3\2\2\2\61\u00bf")
        buf.write("\3\2\2\2\63\u00c7\3\2\2\2\65\u00d1\3\2\2\2\67\u00d7\3")
        buf.write("\2\2\29\u00d9\3\2\2\2;\u00de\3\2\2\2=\u00e6\3\2\2\2?\u00e8")
        buf.write("\3\2\2\2A\u00ea\3\2\2\2C\u00ec\3\2\2\2E\u00ee\3\2\2\2")
        buf.write("G\u00f1\3\2\2\2I\u00f3\3\2\2\2K\u00f6\3\2\2\2M\u00f9\3")
        buf.write("\2\2\2O\u00fb\3\2\2\2Q\u00ff\3\2\2\2S\u0104\3\2\2\2U\u010b")
        buf.write("\3\2\2\2W\u0110\3\2\2\2Y\u0117\3\2\2\2[\u0119\3\2\2\2")
        buf.write("]\u0120\3\2\2\2_\u0125\3\2\2\2a\u0129\3\2\2\2c\u012e\3")
        buf.write("\2\2\2e\u0134\3\2\2\2g\u0139\3\2\2\2i\u013e\3\2\2\2k\u0145")
        buf.write("\3\2\2\2m\u014b\3\2\2\2o\u0158\3\2\2\2q\u0161\3\2\2\2")
        buf.write("s\u0166\3\2\2\2u\u016a\3\2\2\2w\u0177\3\2\2\2yz\7f\2\2")
        buf.write("z{\7g\2\2{|\7h\2\2|\4\3\2\2\2}~\7<\2\2~\177\7<\2\2\177")
        buf.write("\6\3\2\2\2\u0080\u0081\7?\2\2\u0081\u0082\7@\2\2\u0082")
        buf.write("\b\3\2\2\2\u0083\u0084\7}\2\2\u0084\n\3\2\2\2\u0085\u0086")
        buf.write("\7\177\2\2\u0086\f\3\2\2\2\u0087\u0088\7*\2\2\u0088\16")
        buf.write("\3\2\2\2\u0089\u008a\7.\2\2\u008a\20\3\2\2\2\u008b\u008c")
        buf.write("\7+\2\2\u008c\22\3\2\2\2\u008d\u008e\7n\2\2\u008e\u008f")
        buf.write("\7g\2\2\u008f\u0090\7v\2\2\u0090\24\3\2\2\2\u0091\u0092")
        buf.write("\7<\2\2\u0092\26\3\2\2\2\u0093\u0094\7?\2\2\u0094\30\3")
        buf.write("\2\2\2\u0095\u0096\7k\2\2\u0096\u0097\7p\2\2\u0097\32")
        buf.write("\3\2\2\2\u0098\u0099\7]\2\2\u0099\34\3\2\2\2\u009a\u009b")
        buf.write("\7_\2\2\u009b\36\3\2\2\2\u009c\u009d\7k\2\2\u009d\u009e")
        buf.write("\7h\2\2\u009e \3\2\2\2\u009f\u00a0\7v\2\2\u00a0\u00a1")
        buf.write("\7j\2\2\u00a1\u00a2\7g\2\2\u00a2\u00a3\7p\2\2\u00a3\"")
        buf.write("\3\2\2\2\u00a4\u00a5\7g\2\2\u00a5\u00a6\7n\2\2\u00a6\u00a7")
        buf.write("\7u\2\2\u00a7\u00a8\7g\2\2\u00a8$\3\2\2\2\u00a9\u00aa")
        buf.write("\7\\\2\2\u00aa\u00ab\7g\2\2\u00ab\u00ac\7t\2\2\u00ac\u00ad")
        buf.write("\7q\2\2\u00ad&\3\2\2\2\u00ae\u00af\7I\2\2\u00af\u00b0")
        buf.write("\7t\2\2\u00b0\u00b1\7c\2\2\u00b1\u00b2\7f\2\2\u00b2(\3")
        buf.write("\2\2\2\u00b3\u00b4\7T\2\2\u00b4\u00b5\7g\2\2\u00b5\u00b6")
        buf.write("\7h\2\2\u00b6*\3\2\2\2\u00b7\u00b8\7<\2\2\u00b8\u00b9")
        buf.write("\7?\2\2\u00b9,\3\2\2\2\u00ba\u00bb\7^\2\2\u00bb.\3\2\2")
        buf.write("\2\u00bc\u00bd\7/\2\2\u00bd\u00be\7@\2\2\u00be\60\3\2")
        buf.write("\2\2\u00bf\u00c0\7w\2\2\u00c0\u00c1\7p\2\2\u00c1\u00c2")
        buf.write("\7h\2\2\u00c2\u00c3\7q\2\2\u00c3\u00c4\7n\2\2\u00c4\u00c5")
        buf.write("\7f\2\2\u00c5\u00c6\7t\2\2\u00c6\62\3\2\2\2\u00c7\u00c8")
        buf.write("\7t\2\2\u00c8\u00c9\7g\2\2\u00c9\u00ca\7r\2\2\u00ca\u00cb")
        buf.write("\7n\2\2\u00cb\u00cc\7k\2\2\u00cc\u00cd\7e\2\2\u00cd\u00ce")
        buf.write("\7c\2\2\u00ce\u00cf\7v\2\2\u00cf\u00d0\7g\2\2\u00d0\64")
        buf.write("\3\2\2\2\u00d1\u00d2\7h\2\2\u00d2\u00d3\7q\2\2\u00d3\u00d4")
        buf.write("\7n\2\2\u00d4\u00d5\7f\2\2\u00d5\u00d6\7n\2\2\u00d6\66")
        buf.write("\3\2\2\2\u00d7\u00d8\7B\2\2\u00d88\3\2\2\2\u00d9\u00da")
        buf.write("\7t\2\2\u00da\u00db\7g\2\2\u00db\u00dc\7n\2\2\u00dc\u00dd")
        buf.write("\7w\2\2\u00dd:\3\2\2\2\u00de\u00df\7u\2\2\u00df\u00e0")
        buf.write("\7q\2\2\u00e0\u00e1\7h\2\2\u00e1\u00e2\7v\2\2\u00e2\u00e3")
        buf.write("\7o\2\2\u00e3\u00e4\7c\2\2\u00e4\u00e5\7z\2\2\u00e5<\3")
        buf.write("\2\2\2\u00e6\u00e7\7-\2\2\u00e7>\3\2\2\2\u00e8\u00e9\7")
        buf.write("/\2\2\u00e9@\3\2\2\2\u00ea\u00eb\7,\2\2\u00ebB\3\2\2\2")
        buf.write("\u00ec\u00ed\7\61\2\2\u00edD\3\2\2\2\u00ee\u00ef\7#\2")
        buf.write("\2\u00ef\u00f0\7?\2\2\u00f0F\3\2\2\2\u00f1\u00f2\7>\2")
        buf.write("\2\u00f2H\3\2\2\2\u00f3\u00f4\7>\2\2\u00f4\u00f5\7?\2")
        buf.write("\2\u00f5J\3\2\2\2\u00f6\u00f7\7@\2\2\u00f7\u00f8\7?\2")
        buf.write("\2\u00f8L\3\2\2\2\u00f9\u00fa\7@\2\2\u00faN\3\2\2\2\u00fb")
        buf.write("\u00fc\7o\2\2\u00fc\u00fd\7c\2\2\u00fd\u00fe\7r\2\2\u00fe")
        buf.write("P\3\2\2\2\u00ff\u0100\7h\2\2\u0100\u0101\7q\2\2\u0101")
        buf.write("\u0102\7n\2\2\u0102\u0103\7f\2\2\u0103R\3\2\2\2\u0104")
        buf.write("\u0105\7w\2\2\u0105\u0106\7p\2\2\u0106\u0107\7h\2\2\u0107")
        buf.write("\u0108\7q\2\2\u0108\u0109\7n\2\2\u0109\u010a\7f\2\2\u010a")
        buf.write("T\3\2\2\2\u010b\u010c\7v\2\2\u010c\u010d\7c\2\2\u010d")
        buf.write("\u010e\7k\2\2\u010e\u010f\7n\2\2\u010fV\3\2\2\2\u0110")
        buf.write("\u0111\7h\2\2\u0111\u0112\7k\2\2\u0112\u0113\7n\2\2\u0113")
        buf.write("\u0114\7v\2\2\u0114\u0115\7g\2\2\u0115\u0116\7t\2\2\u0116")
        buf.write("X\3\2\2\2\u0117\u0118\7#\2\2\u0118Z\3\2\2\2\u0119\u011a")
        buf.write("\7V\2\2\u011a\u011b\7g\2\2\u011b\u011c\7p\2\2\u011c\u011d")
        buf.write("\7u\2\2\u011d\u011e\7q\2\2\u011e\u011f\7t\2\2\u011f\\")
        buf.write("\3\2\2\2\u0120\u0121\7N\2\2\u0121\u0122\7k\2\2\u0122\u0123")
        buf.write("\7u\2\2\u0123\u0124\7v\2\2\u0124^\3\2\2\2\u0125\u0126")
        buf.write("\7K\2\2\u0126\u0127\7p\2\2\u0127\u0128\7v\2\2\u0128`\3")
        buf.write("\2\2\2\u0129\u012a\7W\2\2\u012a\u012b\7K\2\2\u012b\u012c")
        buf.write("\7p\2\2\u012c\u012d\7v\2\2\u012db\3\2\2\2\u012e\u012f")
        buf.write("\7H\2\2\u012f\u0130\7n\2\2\u0130\u0131\7q\2\2\u0131\u0132")
        buf.write("\7c\2\2\u0132\u0133\7v\2\2\u0133d\3\2\2\2\u0134\u0135")
        buf.write("\7D\2\2\u0135\u0136\7q\2\2\u0136\u0137\7q\2\2\u0137\u0138")
        buf.write("\7n\2\2\u0138f\3\2\2\2\u0139\u013a\7H\2\2\u013a\u013b")
        buf.write("\7w\2\2\u013b\u013c\7p\2\2\u013c\u013d\7e\2\2\u013dh\3")
        buf.write("\2\2\2\u013e\u013f\7U\2\2\u013f\u0140\7j\2\2\u0140\u0141")
        buf.write("\7c\2\2\u0141\u0142\7r\2\2\u0142\u0143\7g\2\2\u0143j\3")
        buf.write("\2\2\2\u0144\u0146\t\2\2\2\u0145\u0144\3\2\2\2\u0146\u0147")
        buf.write("\3\2\2\2\u0147\u0145\3\2\2\2\u0147\u0148\3\2\2\2\u0148")
        buf.write("\u0149\3\2\2\2\u0149\u014a\b\66\2\2\u014al\3\2\2\2\u014b")
        buf.write("\u014c\7\61\2\2\u014c\u014d\7\61\2\2\u014d\u0151\3\2\2")
        buf.write("\2\u014e\u0150\13\2\2\2\u014f\u014e\3\2\2\2\u0150\u0153")
        buf.write("\3\2\2\2\u0151\u0152\3\2\2\2\u0151\u014f\3\2\2\2\u0152")
        buf.write("\u0154\3\2\2\2\u0153\u0151\3\2\2\2\u0154\u0155\7\f\2\2")
        buf.write("\u0155\u0156\3\2\2\2\u0156\u0157\b\67\2\2\u0157n\3\2\2")
        buf.write("\2\u0158\u015d\t\3\2\2\u0159\u015c\t\3\2\2\u015a\u015c")
        buf.write("\5q9\2\u015b\u0159\3\2\2\2\u015b\u015a\3\2\2\2\u015c\u015f")
        buf.write("\3\2\2\2\u015d\u015b\3\2\2\2\u015d\u015e\3\2\2\2\u015e")
        buf.write("p\3\2\2\2\u015f\u015d\3\2\2\2\u0160\u0162\4\62;\2\u0161")
        buf.write("\u0160\3\2\2\2\u0162\u0163\3\2\2\2\u0163\u0161\3\2\2\2")
        buf.write("\u0163\u0164\3\2\2\2\u0164r\3\2\2\2\u0165\u0167\7\"\2")
        buf.write("\2\u0166\u0165\3\2\2\2\u0167\u0168\3\2\2\2\u0168\u0166")
        buf.write("\3\2\2\2\u0168\u0169\3\2\2\2\u0169t\3\2\2\2\u016a\u016b")
        buf.write("\5q9\2\u016b\u016c\7\60\2\2\u016c\u016d\5q9\2\u016dv\3")
        buf.write("\2\2\2\u016e\u016f\7V\2\2\u016f\u0170\7t\2\2\u0170\u0171")
        buf.write("\7w\2\2\u0171\u0178\7g\2\2\u0172\u0173\7H\2\2\u0173\u0174")
        buf.write("\7c\2\2\u0174\u0175\7n\2\2\u0175\u0176\7u\2\2\u0176\u0178")
        buf.write("\7g\2\2\u0177\u016e\3\2\2\2\u0177\u0172\3\2\2\2\u0178")
        buf.write("x\3\2\2\2\n\2\u0147\u0151\u015b\u015d\u0163\u0168\u0177")
        buf.write("\3\b\2\2")
        return buf.getvalue()


class GlacierLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    WS = 53
    COMMENT = 54
    VAR = 55
    INT = 56
    SPACESL = 57
    FLOAT = 58
    BOOLEAN = 59

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'def'", "'::'", "'=>'", "'{'", "'}'", "'('", "','", "')'", 
            "'let'", "':'", "'='", "'in'", "'['", "']'", "'if'", "'then'", 
            "'else'", "'Zero'", "'Grad'", "'Ref'", "':='", "'\\'", "'->'", 
            "'unfoldr'", "'replicate'", "'foldl'", "'@'", "'relu'", "'softmax'", 
            "'+'", "'-'", "'*'", "'/'", "'!='", "'<'", "'<='", "'>='", "'>'", 
            "'map'", "'fold'", "'unfold'", "'tail'", "'filter'", "'!'", 
            "'Tensor'", "'List'", "'Int'", "'UInt'", "'Float'", "'Bool'", 
            "'Func'", "'Shape'" ]

    symbolicNames = [ "<INVALID>",
            "WS", "COMMENT", "VAR", "INT", "SPACESL", "FLOAT", "BOOLEAN" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "T__51", "WS", "COMMENT", "VAR", "INT", "SPACESL", 
                  "FLOAT", "BOOLEAN" ]

    grammarFileName = "Glacier.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.8")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


