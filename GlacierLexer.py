# Generated from Glacier.g4 by ANTLR 4.8
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2@")
        buf.write("\u018c\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\3\2\3\2\3\2\3\2\3\3\3\3")
        buf.write("\3\3\3\4\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3")
        buf.write("\t\3\n\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\16")
        buf.write("\3\16\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21")
        buf.write("\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24")
        buf.write("\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\26")
        buf.write("\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31")
        buf.write("\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32")
        buf.write("\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34")
        buf.write("\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\37\3\37")
        buf.write("\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3!\3!\3\"\3\"")
        buf.write("\3#\3#\3$\3$\3%\3%\3&\3&\3&\3\'\3\'\3(\3(\3(\3)\3)\3)")
        buf.write("\3*\3*\3+\3+\3+\3+\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3-\3")
        buf.write("-\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3/\3/\3\60\3\60\3\61\3")
        buf.write("\61\3\61\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\62")
        buf.write("\3\63\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\64\3\65\3\65")
        buf.write("\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\66\3\66\3\67\3\67")
        buf.write("\3\67\3\67\3\67\38\38\38\38\38\38\39\69\u0159\n9\r9\16")
        buf.write("9\u015a\39\39\3:\3:\3:\3:\7:\u0163\n:\f:\16:\u0166\13")
        buf.write(":\3:\3:\3:\3:\3;\3;\3;\7;\u016f\n;\f;\16;\u0172\13;\3")
        buf.write("<\6<\u0175\n<\r<\16<\u0176\3=\6=\u017a\n=\r=\16=\u017b")
        buf.write("\3>\3>\3>\3>\3?\3?\3?\3?\3?\3?\3?\3?\3?\5?\u018b\n?\3")
        buf.write("\u0164\2@\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25")
        buf.write("\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+")
        buf.write("\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E")
        buf.write("$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k")
        buf.write("\67m8o9q:s;u<w=y>{?}@\3\2\4\5\2\13\f\17\17\"\"\5\2C\\")
        buf.write("aac|\2\u0192\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3")
        buf.write("\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2")
        buf.write("\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2")
        buf.write("\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2")
        buf.write("#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2")
        buf.write("\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65")
        buf.write("\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2")
        buf.write("\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2")
        buf.write("\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2")
        buf.write("\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3")
        buf.write("\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e")
        buf.write("\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2")
        buf.write("o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2")
        buf.write("\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\3\177\3\2\2\2\5\u0083")
        buf.write("\3\2\2\2\7\u0086\3\2\2\2\t\u0089\3\2\2\2\13\u008b\3\2")
        buf.write("\2\2\r\u008d\3\2\2\2\17\u008f\3\2\2\2\21\u0091\3\2\2\2")
        buf.write("\23\u0093\3\2\2\2\25\u0097\3\2\2\2\27\u0099\3\2\2\2\31")
        buf.write("\u009b\3\2\2\2\33\u009e\3\2\2\2\35\u00a0\3\2\2\2\37\u00a2")
        buf.write("\3\2\2\2!\u00a5\3\2\2\2#\u00aa\3\2\2\2%\u00af\3\2\2\2")
        buf.write("\'\u00b4\3\2\2\2)\u00b9\3\2\2\2+\u00bd\3\2\2\2-\u00c0")
        buf.write("\3\2\2\2/\u00c2\3\2\2\2\61\u00c5\3\2\2\2\63\u00cd\3\2")
        buf.write("\2\2\65\u00d7\3\2\2\2\67\u00dd\3\2\2\29\u00e3\3\2\2\2")
        buf.write(";\u00e8\3\2\2\2=\u00ea\3\2\2\2?\u00ef\3\2\2\2A\u00f7\3")
        buf.write("\2\2\2C\u00f9\3\2\2\2E\u00fb\3\2\2\2G\u00fd\3\2\2\2I\u00ff")
        buf.write("\3\2\2\2K\u0101\3\2\2\2M\u0104\3\2\2\2O\u0106\3\2\2\2")
        buf.write("Q\u0109\3\2\2\2S\u010c\3\2\2\2U\u010e\3\2\2\2W\u0112\3")
        buf.write("\2\2\2Y\u0117\3\2\2\2[\u011e\3\2\2\2]\u0123\3\2\2\2_\u012a")
        buf.write("\3\2\2\2a\u012c\3\2\2\2c\u0133\3\2\2\2e\u0138\3\2\2\2")
        buf.write("g\u013c\3\2\2\2i\u0141\3\2\2\2k\u0147\3\2\2\2m\u014c\3")
        buf.write("\2\2\2o\u0151\3\2\2\2q\u0158\3\2\2\2s\u015e\3\2\2\2u\u016b")
        buf.write("\3\2\2\2w\u0174\3\2\2\2y\u0179\3\2\2\2{\u017d\3\2\2\2")
        buf.write("}\u018a\3\2\2\2\177\u0080\7f\2\2\u0080\u0081\7g\2\2\u0081")
        buf.write("\u0082\7h\2\2\u0082\4\3\2\2\2\u0083\u0084\7<\2\2\u0084")
        buf.write("\u0085\7<\2\2\u0085\6\3\2\2\2\u0086\u0087\7?\2\2\u0087")
        buf.write("\u0088\7@\2\2\u0088\b\3\2\2\2\u0089\u008a\7}\2\2\u008a")
        buf.write("\n\3\2\2\2\u008b\u008c\7\177\2\2\u008c\f\3\2\2\2\u008d")
        buf.write("\u008e\7*\2\2\u008e\16\3\2\2\2\u008f\u0090\7.\2\2\u0090")
        buf.write("\20\3\2\2\2\u0091\u0092\7+\2\2\u0092\22\3\2\2\2\u0093")
        buf.write("\u0094\7n\2\2\u0094\u0095\7g\2\2\u0095\u0096\7v\2\2\u0096")
        buf.write("\24\3\2\2\2\u0097\u0098\7<\2\2\u0098\26\3\2\2\2\u0099")
        buf.write("\u009a\7?\2\2\u009a\30\3\2\2\2\u009b\u009c\7k\2\2\u009c")
        buf.write("\u009d\7p\2\2\u009d\32\3\2\2\2\u009e\u009f\7]\2\2\u009f")
        buf.write("\34\3\2\2\2\u00a0\u00a1\7_\2\2\u00a1\36\3\2\2\2\u00a2")
        buf.write("\u00a3\7k\2\2\u00a3\u00a4\7h\2\2\u00a4 \3\2\2\2\u00a5")
        buf.write("\u00a6\7v\2\2\u00a6\u00a7\7j\2\2\u00a7\u00a8\7g\2\2\u00a8")
        buf.write("\u00a9\7p\2\2\u00a9\"\3\2\2\2\u00aa\u00ab\7g\2\2\u00ab")
        buf.write("\u00ac\7n\2\2\u00ac\u00ad\7u\2\2\u00ad\u00ae\7g\2\2\u00ae")
        buf.write("$\3\2\2\2\u00af\u00b0\7\\\2\2\u00b0\u00b1\7g\2\2\u00b1")
        buf.write("\u00b2\7t\2\2\u00b2\u00b3\7q\2\2\u00b3&\3\2\2\2\u00b4")
        buf.write("\u00b5\7I\2\2\u00b5\u00b6\7t\2\2\u00b6\u00b7\7c\2\2\u00b7")
        buf.write("\u00b8\7f\2\2\u00b8(\3\2\2\2\u00b9\u00ba\7T\2\2\u00ba")
        buf.write("\u00bb\7g\2\2\u00bb\u00bc\7h\2\2\u00bc*\3\2\2\2\u00bd")
        buf.write("\u00be\7<\2\2\u00be\u00bf\7?\2\2\u00bf,\3\2\2\2\u00c0")
        buf.write("\u00c1\7^\2\2\u00c1.\3\2\2\2\u00c2\u00c3\7/\2\2\u00c3")
        buf.write("\u00c4\7@\2\2\u00c4\60\3\2\2\2\u00c5\u00c6\7w\2\2\u00c6")
        buf.write("\u00c7\7p\2\2\u00c7\u00c8\7h\2\2\u00c8\u00c9\7q\2\2\u00c9")
        buf.write("\u00ca\7n\2\2\u00ca\u00cb\7f\2\2\u00cb\u00cc\7t\2\2\u00cc")
        buf.write("\62\3\2\2\2\u00cd\u00ce\7t\2\2\u00ce\u00cf\7g\2\2\u00cf")
        buf.write("\u00d0\7r\2\2\u00d0\u00d1\7n\2\2\u00d1\u00d2\7k\2\2\u00d2")
        buf.write("\u00d3\7e\2\2\u00d3\u00d4\7c\2\2\u00d4\u00d5\7v\2\2\u00d5")
        buf.write("\u00d6\7g\2\2\u00d6\64\3\2\2\2\u00d7\u00d8\7h\2\2\u00d8")
        buf.write("\u00d9\7q\2\2\u00d9\u00da\7n\2\2\u00da\u00db\7f\2\2\u00db")
        buf.write("\u00dc\7n\2\2\u00dc\66\3\2\2\2\u00dd\u00de\7o\2\2\u00de")
        buf.write("\u00df\7c\2\2\u00df\u00e0\7v\2\2\u00e0\u00e1\7e\2\2\u00e1")
        buf.write("\u00e2\7j\2\2\u00e28\3\2\2\2\u00e3\u00e4\7e\2\2\u00e4")
        buf.write("\u00e5\7c\2\2\u00e5\u00e6\7u\2\2\u00e6\u00e7\7g\2\2\u00e7")
        buf.write(":\3\2\2\2\u00e8\u00e9\7B\2\2\u00e9<\3\2\2\2\u00ea\u00eb")
        buf.write("\7t\2\2\u00eb\u00ec\7g\2\2\u00ec\u00ed\7n\2\2\u00ed\u00ee")
        buf.write("\7w\2\2\u00ee>\3\2\2\2\u00ef\u00f0\7u\2\2\u00f0\u00f1")
        buf.write("\7q\2\2\u00f1\u00f2\7h\2\2\u00f2\u00f3\7v\2\2\u00f3\u00f4")
        buf.write("\7o\2\2\u00f4\u00f5\7c\2\2\u00f5\u00f6\7z\2\2\u00f6@\3")
        buf.write("\2\2\2\u00f7\u00f8\7-\2\2\u00f8B\3\2\2\2\u00f9\u00fa\7")
        buf.write("/\2\2\u00faD\3\2\2\2\u00fb\u00fc\7,\2\2\u00fcF\3\2\2\2")
        buf.write("\u00fd\u00fe\7\61\2\2\u00feH\3\2\2\2\u00ff\u0100\7\'\2")
        buf.write("\2\u0100J\3\2\2\2\u0101\u0102\7#\2\2\u0102\u0103\7?\2")
        buf.write("\2\u0103L\3\2\2\2\u0104\u0105\7>\2\2\u0105N\3\2\2\2\u0106")
        buf.write("\u0107\7>\2\2\u0107\u0108\7?\2\2\u0108P\3\2\2\2\u0109")
        buf.write("\u010a\7@\2\2\u010a\u010b\7?\2\2\u010bR\3\2\2\2\u010c")
        buf.write("\u010d\7@\2\2\u010dT\3\2\2\2\u010e\u010f\7o\2\2\u010f")
        buf.write("\u0110\7c\2\2\u0110\u0111\7r\2\2\u0111V\3\2\2\2\u0112")
        buf.write("\u0113\7h\2\2\u0113\u0114\7q\2\2\u0114\u0115\7n\2\2\u0115")
        buf.write("\u0116\7f\2\2\u0116X\3\2\2\2\u0117\u0118\7w\2\2\u0118")
        buf.write("\u0119\7p\2\2\u0119\u011a\7h\2\2\u011a\u011b\7q\2\2\u011b")
        buf.write("\u011c\7n\2\2\u011c\u011d\7f\2\2\u011dZ\3\2\2\2\u011e")
        buf.write("\u011f\7v\2\2\u011f\u0120\7c\2\2\u0120\u0121\7k\2\2\u0121")
        buf.write("\u0122\7n\2\2\u0122\\\3\2\2\2\u0123\u0124\7h\2\2\u0124")
        buf.write("\u0125\7k\2\2\u0125\u0126\7n\2\2\u0126\u0127\7v\2\2\u0127")
        buf.write("\u0128\7g\2\2\u0128\u0129\7t\2\2\u0129^\3\2\2\2\u012a")
        buf.write("\u012b\7#\2\2\u012b`\3\2\2\2\u012c\u012d\7V\2\2\u012d")
        buf.write("\u012e\7g\2\2\u012e\u012f\7p\2\2\u012f\u0130\7u\2\2\u0130")
        buf.write("\u0131\7q\2\2\u0131\u0132\7t\2\2\u0132b\3\2\2\2\u0133")
        buf.write("\u0134\7N\2\2\u0134\u0135\7k\2\2\u0135\u0136\7u\2\2\u0136")
        buf.write("\u0137\7v\2\2\u0137d\3\2\2\2\u0138\u0139\7K\2\2\u0139")
        buf.write("\u013a\7p\2\2\u013a\u013b\7v\2\2\u013bf\3\2\2\2\u013c")
        buf.write("\u013d\7W\2\2\u013d\u013e\7K\2\2\u013e\u013f\7p\2\2\u013f")
        buf.write("\u0140\7v\2\2\u0140h\3\2\2\2\u0141\u0142\7H\2\2\u0142")
        buf.write("\u0143\7n\2\2\u0143\u0144\7q\2\2\u0144\u0145\7c\2\2\u0145")
        buf.write("\u0146\7v\2\2\u0146j\3\2\2\2\u0147\u0148\7D\2\2\u0148")
        buf.write("\u0149\7q\2\2\u0149\u014a\7q\2\2\u014a\u014b\7n\2\2\u014b")
        buf.write("l\3\2\2\2\u014c\u014d\7H\2\2\u014d\u014e\7w\2\2\u014e")
        buf.write("\u014f\7p\2\2\u014f\u0150\7e\2\2\u0150n\3\2\2\2\u0151")
        buf.write("\u0152\7U\2\2\u0152\u0153\7j\2\2\u0153\u0154\7c\2\2\u0154")
        buf.write("\u0155\7r\2\2\u0155\u0156\7g\2\2\u0156p\3\2\2\2\u0157")
        buf.write("\u0159\t\2\2\2\u0158\u0157\3\2\2\2\u0159\u015a\3\2\2\2")
        buf.write("\u015a\u0158\3\2\2\2\u015a\u015b\3\2\2\2\u015b\u015c\3")
        buf.write("\2\2\2\u015c\u015d\b9\2\2\u015dr\3\2\2\2\u015e\u015f\7")
        buf.write("\61\2\2\u015f\u0160\7\61\2\2\u0160\u0164\3\2\2\2\u0161")
        buf.write("\u0163\13\2\2\2\u0162\u0161\3\2\2\2\u0163\u0166\3\2\2")
        buf.write("\2\u0164\u0165\3\2\2\2\u0164\u0162\3\2\2\2\u0165\u0167")
        buf.write("\3\2\2\2\u0166\u0164\3\2\2\2\u0167\u0168\7\f\2\2\u0168")
        buf.write("\u0169\3\2\2\2\u0169\u016a\b:\2\2\u016at\3\2\2\2\u016b")
        buf.write("\u0170\t\3\2\2\u016c\u016f\t\3\2\2\u016d\u016f\5w<\2\u016e")
        buf.write("\u016c\3\2\2\2\u016e\u016d\3\2\2\2\u016f\u0172\3\2\2\2")
        buf.write("\u0170\u016e\3\2\2\2\u0170\u0171\3\2\2\2\u0171v\3\2\2")
        buf.write("\2\u0172\u0170\3\2\2\2\u0173\u0175\4\62;\2\u0174\u0173")
        buf.write("\3\2\2\2\u0175\u0176\3\2\2\2\u0176\u0174\3\2\2\2\u0176")
        buf.write("\u0177\3\2\2\2\u0177x\3\2\2\2\u0178\u017a\7\"\2\2\u0179")
        buf.write("\u0178\3\2\2\2\u017a\u017b\3\2\2\2\u017b\u0179\3\2\2\2")
        buf.write("\u017b\u017c\3\2\2\2\u017cz\3\2\2\2\u017d\u017e\5w<\2")
        buf.write("\u017e\u017f\7\60\2\2\u017f\u0180\5w<\2\u0180|\3\2\2\2")
        buf.write("\u0181\u0182\7V\2\2\u0182\u0183\7t\2\2\u0183\u0184\7w")
        buf.write("\2\2\u0184\u018b\7g\2\2\u0185\u0186\7H\2\2\u0186\u0187")
        buf.write("\7c\2\2\u0187\u0188\7n\2\2\u0188\u0189\7u\2\2\u0189\u018b")
        buf.write("\7g\2\2\u018a\u0181\3\2\2\2\u018a\u0185\3\2\2\2\u018b")
        buf.write("~\3\2\2\2\n\2\u015a\u0164\u016e\u0170\u0176\u017b\u018a")
        buf.write("\3\b\2\2")
        return buf.getvalue()


class GlacierLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    T__52 = 53
    T__53 = 54
    T__54 = 55
    WS = 56
    COMMENT = 57
    VAR = 58
    INT = 59
    SPACESL = 60
    FLOAT = 61
    BOOLEAN = 62

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'def'", "'::'", "'=>'", "'{'", "'}'", "'('", "','", "')'", 
            "'let'", "':'", "'='", "'in'", "'['", "']'", "'if'", "'then'", 
            "'else'", "'Zero'", "'Grad'", "'Ref'", "':='", "'\\'", "'->'", 
            "'unfoldr'", "'replicate'", "'foldl'", "'match'", "'case'", 
            "'@'", "'relu'", "'softmax'", "'+'", "'-'", "'*'", "'/'", "'%'", 
            "'!='", "'<'", "'<='", "'>='", "'>'", "'map'", "'fold'", "'unfold'", 
            "'tail'", "'filter'", "'!'", "'Tensor'", "'List'", "'Int'", 
            "'UInt'", "'Float'", "'Bool'", "'Func'", "'Shape'" ]

    symbolicNames = [ "<INVALID>",
            "WS", "COMMENT", "VAR", "INT", "SPACESL", "FLOAT", "BOOLEAN" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "T__51", "T__52", "T__53", "T__54", "WS", "COMMENT", 
                  "VAR", "INT", "SPACESL", "FLOAT", "BOOLEAN" ]

    grammarFileName = "Glacier.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.8")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


